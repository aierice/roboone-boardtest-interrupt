#include "stm32f4xx.h"

#ifndef MOTION_DEFINE_H_
#define MOTION_DEFINE_H
#define adr_torque_on						0b1000100100000001
#define adr_torque_off						0b1000100100000010
#define adr_Attack_1_ing_left				0b1000100000000100
#define adr_Attack_1_ing_right				0b1000100000001000
#define adr_Attack_2_sokkou_left			0b1000000100000100
#define adr_Attack_2_sokkou_right			0b1000000100001000
#define adr_Attack_3_front_left				0b1000100000000101
#define adr_Attack_3_front_right			0b1000100000001001
#define adr_Attack_5_simple					0b1000010100000000
#define adr_Attack_6_righthand				0b1000011000000001
#define adr_Banzai							0b1000000000001110
#define adr_Juushin_Start					0b1000000000001011
#define adr_Juushin_Loop					0b1000000000011011
#define adr_Neutral							0b1000000000000000
#define adr_Righthand						0b1000001000000000
#define adr_Sit								0b1000100100000000
#define adr_Stand_J							0b1000010000000001
#define adr_Stand_K							0b1000010000001000
#define adr_Tehuri_Start					0b1000000000000111
#define adr_Tehuri_Loop						0b1000000000010111
#define adr_Turn_left_Loop					0b1000000000000110
#define adr_Turn_right_Loop					0b1000000000001010
#define adr_Walk_front_Start				0b1000000000000001
#define adr_Walk_front_Loop					0b1000000000010001
#define adr_Walk_front_End					0b1000000000100001
#define adr_Walk_front_from_left			0b1000000000110001
#define adr_Walk_front_from_left2			0b1000000000110101
#define adr_Walk_front_from_left_righthand	0b1000001000110001
#define adr_Walk_front_from_left_righthand2	0b1000001000110101
#define adr_Walk_front_from_right			0b1000000001000001
#define adr_Walk_front_from_right2			0b1000000001001001
#define adr_Walk_front_from_right_righthand	0b1000001001000001
#define adr_Walk_front_from_right_righthand2	0b1000001001001001
#define adr_Walk_front_righthand_Start		0b1000001000000001
#define adr_Walk_front_righthand_Loop		0b1000001000010001
#define adr_Walk_front_righthand_End		0b1000001000100001
#define adr_Walk_left_Loop					0b1000000000000100
#define adr_Walk_left_End					0b1000000000100100
#define adr_Walk_left_from_front			0b1011000000000100
#define adr_Walk_left_from_front2			0b1011000000000101
#define adr_Walk_left_from_front_righthand	0b1011001000000100
#define adr_Walk_left_from_front_righthand2	0b1011001000000101
#define adr_Walk_left_righthand_Loop		0b1000001000000100
#define adr_Walk_left_righthand_End			0b1000001000100100
#define adr_Walk_right_Loop					0b1000000000001000
#define adr_Walk_right_End					0b1000000000101000
#define adr_Walk_right_from_front			0b1011000000001000
#define adr_Walk_right_from_front2			0b1011000000001001
#define adr_Walk_right_from_front_righthand	0b1011001000001000
#define adr_Walk_right_from_front_righthand2	0b1011001000001001
#define adr_Walk_right_righthand_Loop		0b1000001000001000
#define adr_Walk_right_righthand_End		0b1000001000101000

extern int16_t Attack_1_ing_left[7][21];
extern int16_t Attack_1_ing_right[7][21];
extern int16_t Attack_2_sokkou_left[7][21];
extern int16_t Attack_2_sokkou_right[7][21];
extern int16_t Attack_3_front_left[5][21];
extern int16_t Attack_3_front_right[6][21];
extern int16_t Attack_5_simple[4][21];
extern int16_t Attack_6_righthand[4][21];
extern int16_t Banzai[6][21];
extern int16_t Juushin_Start[3][21];
extern int16_t Juushin_Loop[4][21];
extern int16_t Neutral[4][21];
extern int16_t Righthand[3][21];
extern int16_t Sit[4][21];
extern int16_t Stand_J[9][21];
extern int16_t Stand_K[8][21];
extern int16_t Tehuri_Start[3][21];
extern int16_t Tehuri_Loop[4][21];
extern int16_t Turn_left_Loop[5][21];
extern int16_t Turn_right_Loop[5][21];
extern int16_t Walk_front_Start[4][21];
extern int16_t Walk_front_Loop[8][21];
extern int16_t Walk_front_End[5][21];
extern int16_t Walk_front_from_left[4][21];
extern int16_t Walk_front_from_left_righthand[4][21];
extern int16_t Walk_front_from_right[8][21];
extern int16_t Walk_front_from_right_righthand[8][21];
extern int16_t Walk_front_righthand_Start[4][21];
extern int16_t Walk_front_righthand_Loop[8][21];
extern int16_t Walk_front_righthand_End[5][21];
extern int16_t Walk_left_Loop[6][21];
extern int16_t Walk_left_End[6][21];
extern int16_t Walk_left_from_front[5][21];
extern int16_t Walk_left_from_front_righthand[4][21];
extern int16_t Walk_left_righthand_Loop[6][21];
extern int16_t Walk_left_righthand_End[6][21];
extern int16_t Walk_right_Loop[6][21];
extern int16_t Walk_right_End[6][21];
extern int16_t Walk_right_from_front[5][21];
extern int16_t Walk_right_from_front_righthand[5][21];
extern int16_t Walk_right_righthand_Loop[6][21];
extern int16_t Walk_right_righthand_End[6][21];
#endif
